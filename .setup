setup () {
source $HOME/T-Load/.clr

###################
## Modify apk.rb ##
###################

## Backup default apk.rb and copy custom apk.rb
if [ -f $HOME/metasploit-framework/lib/msf/core/payload/apk.rb ]
then
mv $HOME/metasploit-framework/lib/msf/core/payload/apk.rb $HOME/metasploit-framework/lib/msf/core/payload/apk.rb.default.back
cp $HOME/T-Load/.files/apk.rb $HOME/metasploit-framework/lib/msf/core/payload/apk.rb
fi
if [ -f $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb ]
then
mv $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb.default.back
cp $HOME/T-Load/.files/apk.rb $PREFIX/opt/metasploit-framework/lib/msf/core/payload/apk.rb
fi

###########################
## Remove existing tload ##
###########################
if [ -f $PREFIX/bin/tload ]
then
rm $PREFIX/bin/tload
fi

###############################
## Remove  tload from T-Load ##
###############################
if [ -f $HOME/tload ]
then
echo -e "$rd You cannot launch T-Load by typing tload"
echo -e "$rd The new shortcut for quick launch is skstool"
echo -e "$rd I repeat type skstool to open T-Load $rt"
echo ""
echo "Press enter to continue"
read garbage
rm $HOME/tload
fi

###################################
## Remove .msf_default directory ##
###################################
if [ -d $HOME/.msf_default ]
then
rm $HOME/.msf_default -r
fi

echo -e "$bwt $bl Checking for dependecies $rt"

##################
## Install Java ##
##################

if [ -f $PREFIX/bin/java ]
then
echo -e "\e[1;32m Java is installed \e[0m"
else
    echo "Installing java"
	echo ""
	echo "Take a screenshot if you find any error"
	echo ""
	echo "Press enter to continue"
	read garbage
	case `dpkg --print-architecture` in
	aarch64)
		archname="aarch64" ;;
	arm64)
		archname="aarch64" ;;
	armhf)
		archname="arm" ;;
	armv7l)
		archname="arm" ;;
	arm)
		archname="arm" ;;
	*)
		echo -e "\e[91mERROR: Unknown architecture."; echo; echo "Unable to install java. Embeding payload offline will not work"; sleep 5; exit ;;
	esac
	echo -e "\e[32m[*] \e[34mDownloading JDK-8 (~70Mb) for ${archname}..."
	wget https://github.com/Hax4us/java/releases/download/v8/jdk8_${archname}.tar.gz
	echo -e "\e[32m[*] \e[34mMoving JDK to system..."
	mv jdk8_${archname}.tar.gz $PREFIX/share
	echo -e "\e[32m[*] \e[34mExtracting JDK..."
	cd $PREFIX/share
	tar -xhf jdk8_${archname}.tar.gz
	echo -e "\e[32m[*] \e[34mMoving Java wrapper scripts to bin..."
	mv bin/* $PREFIX/bin
	echo -e "\e[32m[*] \e[34mCleaning up temporary files..."
	rm -rf $PREFIX/share/jdk8_${archname}.tar.gz
	rm -rf $PREFIX/share/bin
	echo
	echo -e "\e[32mJava was successfully installed!\e[39m"
	sleep 3
	echo
fi

#####################
## Apktool Install ##
#####################
if [ ! -f $PREFIX/bin/apktool ]
then
echo ""
echo "Installing apktool"
echo ""
echo "Take a screenshot if you find any error"
echo ""
echo "Press enter to continue"
read garbage
ln -s $HOME/T-Load/.files/apktool $PREFIX/bin/apktool
chmod +x $PREFIX/bin/apktool
echo -e "\e[32mApktool was successfully installed!\e[39m"
sleep 5
else
echo -e "\e[1;32m Apktool is installed \e[0m"
fi

######################
## Apktool.jar copy ##
######################
if [ ! -f $PREFIX/bin/apktool.jar ]
then
echo "Copying apktool.jar"
echo ""
echo "Take a screenshot if you find any error"
echo ""
echo "Press enter to continue"
read garbage
ln -s $HOME/T-Load/.files/apktool.jar $PREFIX/bin/apktool.jar
chmod +x $PREFIX/bin/apktool.jar
echo -e "\e[32mApktool.jar was successfully copied!\e[39m"
sleep 5
else
echo -e "\e[1;32m Apktool.jar is present \e[0m"
fi

##################
## Aapt Install ##
##################
if [ ! -f $PREFIX/bin/aapt ]
then
echo ""
echo "Installing aapt"
echo ""
echo "Take a screenshot if you find any error"
echo ""
echo "Press enter to continue"
read garbage
ln -s $HOME/T-Load/.files/aapt $PREFIX/bin/aapt
chmod +x $PREFIX/bin/aapt
echo -e "\e[32mAaptwas successfully installed!\e[39m"
sleep 5
else
echo -e "\e[1;32m Aapt is installed \e[0m"
fi

######################
## Install Zipalign ##
######################

if [ ! -f $PREFIX/bin/zipalign ]
then
echo ""
echo "Installing  zipalign"
echo ""
	echo "Take a screenshot if you find any error"
	echo ""
	echo "Press enter to continue"
	read garbage
ln -s $HOME/T-Load/.files/zipalign $PREFIX/bin/zipalign
chmod +x $PREFIX/bin/zipalign
echo -e "\e[32mZipalign was successfully installed!\e[39m"
sleep 5
clear
else
echo -e "\e[1;32m Zipalign is installed \e[0m"
fi

########################
## Check for packages ##
########################
OS=$(./.setupcheck openssh)
SP=$(./.setupcheck sshpass)
CU=$(./.setupcheck curl)
RS=$(./.setupcheck rsync)
EX=$(./.setupcheck expect)
NA=$(./.setupcheck nano)
no=$(ls $HOME/.skstool_data | wc -l)
if [ "$OS" == "0" ] || [ "$SP" == "0" ] || [ "$CU" == "0" ] || [ "$RS" == "0" ] || [ "$EX" == "0" ] || [ "$NA" == "0" ] || [ ! -d $HOME/.skstool_data ]
then
clear
echo -e "\e[47m \e[1;34m Welcome to T-Load. This must be your first use or the required files must have been deleted. So please wait untill all the required files have been setup.\e[0m"
echo ""
echo "Press enter to continue"
read garbage
fi

######################################
## Create .skstool_data_data folder ##
######################################
if [ ! -d $HOME/.skstool_data ]
then
mkdir $HOME/.skstool_data
fi

######################
## Install Packages ##
######################
if [ "$OS" == "1" ]
then
echo -e "\e[1;32m Openssh is installed \e[0m"
sleep 1
else
echo "Installing openssh"
sleep 2
pkg install openssh -y
fi
if [ "$SP" == "1" ]
then
echo -e "\e[1;32m Sshpass is installed \e[0m"
sleep 1
else
echo "Installing sshpass"
sleep 2
pkg install sshpass -y
fi
if [ "$CU" == "1" ]
then
echo -e "\e[1;32m Curl is installed \e[0m"
sleep 1
else
echo "Installing Curl"
sleep 2
pkg install curl
fi
if [ "$RS" == "1" ]
then
echo -e "\e[1;32m Rsync is installed \e[0m"
sleep 1
else
echo "Installing Rsync"
sleep 2
pkg install rsync -y
fi
if [ "$EX" == "1" ]
then
echo -e "\e[1;32m Expect is installed \e[0m"
sleep 1
else
echo "Installing Expect"
sleep 2
apt-get install expect -y
fi
if [ "$NA" == "1" ]
then
echo -e "\e[1;32m Nano is installed \e[0m"
sleep 1
else
echo "Installing Nano"
sleep 2
pkg install nano -y
fi

############################
## End of package install ##
############################

######################################
## Check for files in .skstool_data ##
######################################
if [ ! -f $HOME/.skstool_data/pay ]
then
touch $HOME/.skstool_data/pay
fi
if [ ! -f $HOME/.skstool_data/updates ]
then
touch $HOME/.skstool_data/updates
fi

###############################
## Set permisions for files  ##
###############################
cd $HOME/T-Load/
chmod +x *
chmod 600 pfskey
chmod 600 key

#################################
## Symlink for executable file ##
#################################
if [ -e $PREFIX/bin/skstool ]
then
rm $PREFIX/bin/skstool
ln -s $HOME/T-Load/skstool $PREFIX/bin/skstool
chmod +x $PREFIX/bin/skstool
fi

######################
## End of autosetup ##
######################

}
if [ "${1}" == "run" ]
then
clear
echo "Running setup on manual invoke"
sleep 2
setup
elif [ "${1}" == "force" ]
then
clear
echo -e "\e[1;31m WARNING! \e[107m Force installation is initiated."
echo -e "\e[1;31m \e[107m This may be unstable"
echo -e "\e[1;31m \e[107m Proceed at your own risk"
echo -e "\e[1;31m \e[107m This is untested by me"
echo -e "\e[1;31m \e[107m Press [enter] to continue or [ctrl + c] to exit \e[0m"
read garbage 
echo ""
echo -e "\e[1;31m Force setup is initiated \e[0m"

##########################
## Start of force setup ##
##########################

########################
## Force Install Java ##
########################
echo "Installing java"
	echo ""
	echo "Take a screenshot if you find any error"
	echo ""
	echo "Press enter to continue"
	read garbage
	case `dpkg --print-architecture` in
	aarch64)
		archname="aarch64" ;;
	arm64)
		archname="aarch64" ;;
	armhf)
		archname="arm" ;;
	armv7l)
		archname="arm" ;;
	arm)
		archname="arm" ;;
	*)
		echo -e "\e[91mERROR: Unknown architecture."; echo; echo "Unable to install java. Embeding payload offline will not work"; sleep 5; exit ;;
	esac
	echo -e "\e[32m[*] \e[34mDownloading JDK-8 (~70Mb) for ${archname}..."
	wget https://github.com/Hax4us/java/releases/download/v8/jdk8_${archname}.tar.gz
	echo -e "\e[32m[*] \e[34mMoving JDK to system..."
	mv jdk8_${archname}.tar.gz $PREFIX/share
	echo -e "\e[32m[*] \e[34mExtracting JDK..."
	cd $PREFIX/share
	tar -xhf jdk8_${archname}.tar.gz
	echo -e "\e[32m[*] \e[34mMoving Java wrapper scripts to bin..."
	mv bin/* $PREFIX/bin
	echo -e "\e[32m[*] \e[34mCleaning up temporary files..."
	rm -rf $PREFIX/share/jdk8_${archname}.tar.gz
	rm -rf $PREFIX/share/bin
	echo
	echo -e "\e[32mJava was successfully installed!\e[39m"
	sleep 3
	echo
	
###########################
## Force install Apktool ##
###########################
if [ -f $PREFIX/bin/apktool ]
then
rm $PREFIX/bin/apktool
fi
if [ -f $PREFIX/bin/apktool.jar ]
then
rm $PREFIX/bin/apktool.jar
fi
if [ -f $PREFIX/bin/aapt ]
then
rm $PREFIX/bin/aapt
fi
echo "Installing apktool"
echo ""
	echo "Take a screenshot if you find any error"
	echo ""
	echo "Press enter to continue"
	read garbage
	clear
ln -s $HOME/T-Load/.files/aapt $PREFIX/bin/aapt
ln -s $HOME/T-Load/.files/apktool $PREFIX/bin/apktool
ln -s $HOME/T-Load/.files/apktool.jar $PREFIX/bin/apktool.jar
chmod +x $PREFIX/bin/apktool*
chmod +x $PREFIX/bin/aapt
echo -e "\e[32mApktool was successfully installed!\e[39m"
sleep 5

############################
## Force install zipalign ##
############################
if [ -f $PREFIX/bin/zipalign ]
then
rm $PREFIX/bin/zipalign
fi
echo "Installing  zipalign"
echo ""
	echo "Take a screenshot if you find any error"
	echo ""
	echo "Press enter to continue"
	read garbage
	clear
ln -s $HOME/T-Load/.files/zipalign $PREFIX/bin/zipalign
chmod +x $PREFIX/bin/zipalign
echo -e "\e[32mZipalign was successfully installed!\e[39m"
sleep 5

##########################
## Force resest skstool ##
##########################
if [ -f $PREFIX/bin/skstool ]
then
rm $PREFIX/bin/skstool
ln -s $HOME/T-Load/skstool $PREFIX/bin/skstool
fi

echo -e "\e[107m \e[1;34m Force setup was ran \e[0m"
sleep 1
echo "If you faced any errors, then please take a screen shot and post it in my forums along with log"
echo ""
echo "Press enter to exit"
read garbage 
exit 

else
clear
echo "This setup will run automatically along with skstool"
echo -e "If you need to manually run then please use \e[107m\e[1;34m setup run \e[0m command "
fi
